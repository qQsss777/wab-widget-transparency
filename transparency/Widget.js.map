{"version":3,"sources":["../../../widgets/transparency/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","on","lang","baseClass","map","value","postCreate","inherited","arguments","sceneView","when","hitch","_init","console","log","panel","getPanel","position","width","height","setPosition","panelManager","normalizePanel","ground","navigationConstraint","type","opacity","own","slider","_onSliderValueChanged"],"mappings":"QAAoB,oB,EACG,iB,EACa,+B,EAIrB,S,EACE,iB,EAJV,6B,EACA,2B,EACA,iC,aALAA,O,EACAC,U,EACAC,uB,EAIAC,E,EACAC,I;SAGQJ,QAAQ,CAACC,UAAD,EAAaC,uBAAb,CAAR,EAA+C;;AAE5DG,eAAW,cAFiD;AAG5DC,SAAK,IAHuD;AAI5DC,WAAO,CAJqD;;AAM5DC,cAN4D,wBAM/C;AACX,WAAKC,SAAL,CAAeC,SAAf;AACA,WAAKC,SAAL,CAAeC,IAAf,CAAoBR,KAAKS,KAAL,CAAW,IAAX,EAAiB,KAAKC,KAAtB,CAApB;AACAC,cAAQC,GAAR,CAAY,0BAAZ;AACD,KAV2D;AAY5DF,SAZ4D,mBAYpD;AACN,UAAMG,QAAQ,KAAKC,QAAL,EAAd;AACAD,YAAME,QAAN,CAAeC,KAAf,GAAuB,GAAvB;AACAH,YAAME,QAAN,CAAeE,MAAf,GAAwB,GAAxB;AACAJ,YAAMK,WAAN,CAAkBL,MAAME,QAAxB;AACAF,YAAMM,YAAN,CAAmBC,cAAnB,CAAkCP,KAAlC;;AAEA,WAAKX,GAAL,GAAW,KAAKK,SAAL,CAAeL,GAA1B;AACA,WAAKA,GAAL,CAASmB,MAAT,CAAgBC,oBAAhB,GAAuC;AACrCC,cAAM;AAD+B,OAAvC;AAGA,WAAKrB,GAAL,CAASmB,MAAT,CAAgBG,OAAhB,GAA0B,KAAKrB,KAA/B;AACA,WAAKsB,GAAL,CAAS1B,GAAG,KAAK2B,MAAR,EAAgB,QAAhB,EAA0B1B,KAAKS,KAAL,CAAW,IAAX,EAAiB,KAAKkB,qBAAtB,CAA1B,CAAT;AACD,KAzB2D;AA2B5DA,yBA3B4D,mCA2BpC;AACtB,WAAKpB,SAAL,CAAeL,GAAf,CAAmBmB,MAAnB,CAA0BG,OAA1B,GAAoC,KAAKrB,KAAL,GAAa,KAAKuB,MAAL,CAAYvB,KAA7D;AACD;AA7B2D,GAA/C,C","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\nimport BaseWidget from 'jimu/BaseWidget';\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\nimport 'dijit/form/HorizontalSlider';\nimport \"dijit/form/HorizontalRule\";\nimport \"dijit/form/HorizontalRuleLabels\";\nimport on from 'dojo/on';\nimport lang from 'dojo/_base/lang';\n\n// To create a widget, you need to derive from BaseWidget.\nexport default declare([BaseWidget, _WidgetsInTemplateMixin], {\n\n  baseClass: 'transparency',\n  map: null,\n  value: 1,\n\n  postCreate() {\n    this.inherited(arguments);\n    this.sceneView.when(lang.hitch(this, this._init));\n    console.log('transparency::postCreate');\n  },\n\n  _init() {\n    const panel = this.getPanel();\n    panel.position.width = 350;\n    panel.position.height = 150;\n    panel.setPosition(panel.position);\n    panel.panelManager.normalizePanel(panel);\n\n    this.map = this.sceneView.map;\n    this.map.ground.navigationConstraint = {\n      type: \"none\"\n    };\n    this.map.ground.opacity = this.value;\n    this.own(on(this.slider, 'change', lang.hitch(this, this._onSliderValueChanged)));\n  },\n\n  _onSliderValueChanged() {\n    this.sceneView.map.ground.opacity = this.value - this.slider.value\n  },\n\n});\n"]}